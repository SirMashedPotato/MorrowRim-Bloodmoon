<?xml version="1.0" encoding="utf-8" ?>
<Defs>

	<QuestScriptDef>
		<defName>MorrowRim_WerewolfLordSite</defName>
		<rootSelectionWeight>0.2</rootSelectionWeight>
		<rootMinPoints>350</rootMinPoints>
		<canGiveRoyalFavor>true</canGiveRoyalFavor>
		<expireDaysRange>8~16</expireDaysRange>
		<!--<successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">Raided_BanditCamp</successHistoryEvent>-->
		<questNameRules>
		  <include>
			<li>TribalWordUtility</li>
		  </include>
		  <rulesStrings>
			<li>questName->The [Lord] of [Color] [TerrainFeature]</li>
			<li>questName(asker_factionLeader==True)->[asker_nameDef] and [Lord] of the [TerrainFeature]</li>
			<li>Lord->Lord</li>
			<li>Lord->Tyrant</li>
			<li>Lord->Ruler</li>
		  </rulesStrings>
		</questNameRules>
		<questDescriptionRules>
		  <rulesStrings>
			<!-- No asker -->
			<li>questDescription(askerIsNull==true)->We have uncovered the location of a Werewolf Lord, not far from [map_definite]. Successfully hunting it would surely prove ourselves to Hircine, though time is of the essence. Locals will likely send us a reward if the entire werewolf pack is dealt with.</li>

			<!-- Faction leader asker -->
			<li>questDescription->[asker_nameDef] has informed us of the location of a Werewolf Lord, not far from us. Successfully hunting it would surely prove ourselves to Hircine, though time is of the essence. [asker_nameDef] will only send payment if the entire pack is wiped out.\n\n[asker_label] says that [allSitePartsDescriptionsExceptFirst]</li>

		  </rulesStrings>
		</questDescriptionRules>
		
		<root Class="QuestNode_Sequence">
		  <nodes>
			<li Class="QuestNode_SubScript">
			  <def>Util_RandomizePointsChallengeRating</def>
			  <parms>
				<pointsFactorTwoStar>2</pointsFactorTwoStar>
				<pointsFactorThreeStar>3</pointsFactorThreeStar>
			  </parms>
			</li>
			<li Class="QuestNode_SubScript">
			  <def>Util_AdjustPointsForDistantFight</def>
			</li>
			<li Class="QuestNode_GetMap" />

			<li Class="QuestNode_IsSet">
			  <name>asker</name>
			  <elseNode Class="QuestNode_RandomNode">
				<nodes>
				  <li Class="QuestNode_Set">
					<name>askerIsNull</name>
					<value>true</value>
					<selectionWeight>0.4</selectionWeight>
				  </li>
				  <li Class="QuestNode_GetPawn">
					<storeAs>asker</storeAs>
					<mustBeFactionLeader>true</mustBeFactionLeader>
					<mustBeNonHostileToPlayer>true</mustBeNonHostileToPlayer>
					<hostileWeight>0.15</hostileWeight>
					<selectionWeight>0.6</selectionWeight>
				  </li>
				</nodes>
			  </elseNode>
			</li>

			<li Class="QuestNode_GetSiteTile">
			  <storeAs>siteTile</storeAs>
			  <preferCloserTiles>true</preferCloserTiles>
			</li>

			<li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
			  <storeAs>sitePartDefs</storeAs>
			  <storeFactionAs>siteFaction</storeFactionAs>
			  <sitePartsTags>
				<li><tag>MorrowRim_BloodmoonWerewolfLord</tag></li>
				<li><tag>MorrowRim_BloodmoonWerewolfPack</tag></li>
			  </sitePartsTags>
			</li>

			<li Class="QuestNode_GetDefaultSitePartsParams">
			  <tile>$siteTile</tile>
			  <faction>$siteFaction</faction>
			  <sitePartDefs>$sitePartDefs</sitePartDefs>
			  <storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
			</li>
			
			<li Class="QuestNode_GetSiteThreatPoints">
			  <storeAs>sitePoints</storeAs>
			  <sitePartsParams>$sitePartsParams</sitePartsParams>
			</li>
			<li Class="QuestNode_SubScript">
			  <def>Util_GetDefaultRewardValueFromPoints</def>
			  <parms>
				<!-- Use the actual threat points generated (some site parts define a minimum threshold) -->
				<points>$sitePoints</points>
			  </parms>
			</li>

			<!-- Inflate reward value. Since we're basing the reward value on the threat points generated, we need to do this
				 even though the threat points was deflated from the input points already. -->
			<li Class="QuestNode_Multiply">
				<value1>$rewardValue</value1>
				<value2>1.75</value2>
				<storeAs>rewardValue</storeAs>
			</li>

			<li Class="QuestNode_SubScript">
			  <def>Util_GenerateSite</def>
			  <parms>
				<hiddenSitePartsPossible>false</hiddenSitePartsPossible>
			  </parms>
			</li>
			
			<li Class="QuestNode_SpawnWorldObjects">
			  <worldObjects>$site</worldObjects>
			</li>

			<li Class="QuestNode_WorldObjectTimeout">
			  <worldObject>$site</worldObject>
			  <isQuestTimeout>true</isQuestTimeout>
			  <delayTicks>$(randInt(6,14)*60000)</delayTicks>
			  <inSignalDisable>site.MapGenerated</inSignalDisable>
			  <node Class="QuestNode_Sequence">
				<nodes>
				  <li Class="QuestNode_Letter">
					<label TKey="LetterLabelQuestExpired">Quest expired: [resolvedQuestName]</label>
					<text TKey="LetterTextQuestExpired">The Werewolf Lord has moved on to new hunting grounds. The quest [resolvedQuestName] has expired.</text>
				  </li>
				  <li Class="QuestNode_End">
					<outcome>Fail</outcome>
				  </li>
				</nodes>
			  </node>
			</li>

			<!-- If we enter and leave, the map is destroyed. Fail the quest. -->
			<li Class="QuestNode_Signal">
			  <inSignal>site.Destroyed</inSignal>
			  <node Class="QuestNode_Sequence">
				<nodes>
				  <li Class="QuestNode_Letter">
					<label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
					<text TKey="LetterTextQuestFailed">After being discovered, the Werewolf Lord has fled, and is likely seeking a new hunting grounds. The quest [resolvedQuestName] has ended.</text>
				  </li>
				  <li Class="QuestNode_End">
					<outcome>Fail</outcome>
				  </li>
				</nodes>
			  </node>
			</li>

			<li Class="QuestNode_Signal">
			  <inSignal>site.AllEnemiesDefeated</inSignal>
			  <node Class="QuestNode_Sequence">
				<nodes>

				  <li Class="QuestNode_GiveRewards">
					<parms>
					  <allowGoodwill>false</allowGoodwill>
					  <allowRoyalFavor>true</allowRoyalFavor>
					  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
					</parms>
					<addCampLootReward>true</addCampLootReward>
					<customLetterLabel TKey="LetterLabelPaymentArrived">Payment arrived</customLetterLabel>
					<customLetterText TKey="LetterTextPaymentArrived">You have defeated the Werewolf Lord!\n\nPayment has arrived.</customLetterText>
					<nodeIfChosenPawnSignalUsed Class="QuestNode_Letter">
					  <letterDef>ChoosePawn</letterDef>
					  <label TKey="LetterLabelFavorReceiver">[asker_faction_royalFavorLabel]</label>
					  <text TKey="LetterTextFavorReceiver">These colonists participated in the victory for the quest [resolvedQuestName]. [asker_definite] wants to know who should receive the [royalFavorReward_amount] [asker_faction_royalFavorLabel] for this service.</text>
					  <useColonistsOnMap>$site</useColonistsOnMap>
					  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
					</nodeIfChosenPawnSignalUsed>
				  </li>
				</nodes>
			  </node>
			</li>
			<li Class="QuestNode_End">
			  <inSignal>site.AllEnemiesDefeated</inSignal>
			  <outcome>Success</outcome>
			</li>
		  </nodes>
		</root>
	</QuestScriptDef>

</Defs>
